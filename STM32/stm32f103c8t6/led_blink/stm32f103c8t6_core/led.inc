LED_DEF = 0

@ Указываем, что далее идет сегмент кода
.text

@ Включаем код из gpio.inc в led.inc, если он не был включен раньше
.ifndef GPIO_DEF
.include "stm32f103c8t6_core/gpio.inc"
.endif

@ Функция инициализирует pin 13 из PORT C как output pin
led_init:
	push {r0, r1}							@ Сохраняем регистры r0, r1  в стэк
	
	push {lr}								@ Сохраняем Link Register в стэк
	bl gpio_port_c_rcc_init					@ Вызываем функцию gpio_port_c_rcc_init		
	pop {lr}								@ Восстанавливаем Link Register из стэка
	
	@ Читаем текущее значение GPIOC_CRH регистра
	ldr r1, =GPIOC_CRH						@ Загружаем адрес регистра GPIOC_CRH в регистр r1
	ldr r0, [r1]							@ Загружаем значение хранящееся по адресу из регистре r1 в регистр r0

	@ Очищаем биты 23:20 в значении загруженном из регистра GPIOC_CRH
	@ Если значения битов 23:22 = «00», то pin будет работать в режиме push-pull
	and r0, r0, 0xFF0FFFFF										
	
	@ Конфигурируем PORT C pin 13, для работы как output, на частоте до 2mhz
	@ Для этого выставляем бит 21 в 1 накладывая соответствующую битовую маску
	orr r0, r0, 0x200000					
	
	
	@ Сохраняем значение из регистра r0 по адресу находящемуся в регистре r1
	@ В данный момент там находится адрес регистра GPIOC_CRH  
	str r0, [r1]
	
	pop {r0, r1}							@ Восстанавливаем регистры r0, r1 из стэка
	
	bx lr									@ Выходим из функции

@ Эта функция мигает светодиом подключенным к пину 13 на PORT C
led_flash:
	push {r0, r1}							@ Сохраняем регистры r0 и r1 в стэк
	
	@ Читаем текущее значение GPIOC_ODR регистра
	ldr r1, =GPIOC_ODR						@ Загружаем адрес регистра GPIOC_ODR в регистр r1
	ldr r0, [r1]							@ Загружаем значение хранящееся по адресу из регистре r1 в регистр r0
	
	@ Переключаем текущее состояние 13ого бита из регистра GPIOC_ODR
	@ Т.е. мигаем светодиодом
	eor r0, 0x2000
	
	@ Сохраняем значение из регистра r0 по адресу находящемуся в регистре r1
	@ В данный момент там находится адрес регистра GPIOC_ODR  
	str r0, [r1]
	
	pop {r0, r1}							@ Восстанавливаем регистры r0 и r1 из стэка
	
	bx lr									@ Выходим из функции
